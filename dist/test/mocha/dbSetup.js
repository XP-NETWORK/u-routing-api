import { dbConnectionSetup } from './dynamoDBLocalFixture';
const createTable = async (table) => {
    const ddb = getDdbOrDie();
    await ddb.createTable(table).promise();
};
const getDdbOrDie = () => {
    const ddb = global['__DYNAMODB_CLIENT__'];
    if (ddb === undefined) {
        throw new Error();
    }
    return ddb;
};
export const deleteAllTables = async () => {
    const ddb = getDdbOrDie();
    const { TableNames: tableNames } = await ddb.listTables().promise();
    if (tableNames === undefined) {
        return;
    }
    await Promise.all(tableNames.map((t) => ddb.deleteTable({ TableName: t }).promise()));
};
export const setupTables = (...tables) => {
    dbConnectionSetup();
    beforeEach(async () => {
        await Promise.all(tables.map(createTable));
    });
    afterEach(async () => {
        await deleteAllTables();
    });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGJTZXR1cC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Rlc3QvbW9jaGEvZGJTZXR1cC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQTtBQUUxRCxNQUFNLFdBQVcsR0FBRyxLQUFLLEVBQUUsS0FBc0MsRUFBRSxFQUFFO0lBQ25FLE1BQU0sR0FBRyxHQUFHLFdBQVcsRUFBRSxDQUFBO0lBRXpCLE1BQU0sR0FBRyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQTtBQUN4QyxDQUFDLENBQUE7QUFFRCxNQUFNLFdBQVcsR0FBRyxHQUFhLEVBQUU7SUFDakMsTUFBTSxHQUFHLEdBQUksTUFBYyxDQUFDLHFCQUFxQixDQUFhLENBQUE7SUFFOUQsSUFBSSxHQUFHLEtBQUssU0FBUyxFQUFFO1FBQ3JCLE1BQU0sSUFBSSxLQUFLLEVBQUUsQ0FBQTtLQUNsQjtJQUVELE9BQU8sR0FBRyxDQUFBO0FBQ1osQ0FBQyxDQUFBO0FBRUQsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLEtBQUssSUFBSSxFQUFFO0lBQ3hDLE1BQU0sR0FBRyxHQUFHLFdBQVcsRUFBRSxDQUFBO0lBQ3pCLE1BQU0sRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLEdBQUcsTUFBTSxHQUFHLENBQUMsVUFBVSxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUE7SUFFbkUsSUFBSSxVQUFVLEtBQUssU0FBUyxFQUFFO1FBQzVCLE9BQU07S0FDUDtJQUVELE1BQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLEVBQUUsU0FBUyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFBO0FBQ3ZGLENBQUMsQ0FBQTtBQUVELE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxDQUFDLEdBQUcsTUFBeUMsRUFBRSxFQUFFO0lBQzFFLGlCQUFpQixFQUFFLENBQUE7SUFDbkIsVUFBVSxDQUFDLEtBQUssSUFBSSxFQUFFO1FBQ3BCLE1BQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUE7SUFDNUMsQ0FBQyxDQUFDLENBQUE7SUFFRixTQUFTLENBQUMsS0FBSyxJQUFJLEVBQUU7UUFDbkIsTUFBTSxlQUFlLEVBQUUsQ0FBQTtJQUN6QixDQUFDLENBQUMsQ0FBQTtBQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IER5bmFtb0RCIH0gZnJvbSAnYXdzLXNkaydcbmltcG9ydCB7IGRiQ29ubmVjdGlvblNldHVwIH0gZnJvbSAnLi9keW5hbW9EQkxvY2FsRml4dHVyZSdcblxuY29uc3QgY3JlYXRlVGFibGUgPSBhc3luYyAodGFibGU6IER5bmFtb0RCLlR5cGVzLkNyZWF0ZVRhYmxlSW5wdXQpID0+IHtcbiAgY29uc3QgZGRiID0gZ2V0RGRiT3JEaWUoKVxuXG4gIGF3YWl0IGRkYi5jcmVhdGVUYWJsZSh0YWJsZSkucHJvbWlzZSgpXG59XG5cbmNvbnN0IGdldERkYk9yRGllID0gKCk6IER5bmFtb0RCID0+IHtcbiAgY29uc3QgZGRiID0gKGdsb2JhbCBhcyBhbnkpWydfX0RZTkFNT0RCX0NMSUVOVF9fJ10gYXMgRHluYW1vREJcblxuICBpZiAoZGRiID09PSB1bmRlZmluZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoKVxuICB9XG5cbiAgcmV0dXJuIGRkYlxufVxuXG5leHBvcnQgY29uc3QgZGVsZXRlQWxsVGFibGVzID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCBkZGIgPSBnZXREZGJPckRpZSgpXG4gIGNvbnN0IHsgVGFibGVOYW1lczogdGFibGVOYW1lcyB9ID0gYXdhaXQgZGRiLmxpc3RUYWJsZXMoKS5wcm9taXNlKClcblxuICBpZiAodGFibGVOYW1lcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuXG4gIH1cblxuICBhd2FpdCBQcm9taXNlLmFsbCh0YWJsZU5hbWVzLm1hcCgodCkgPT4gZGRiLmRlbGV0ZVRhYmxlKHsgVGFibGVOYW1lOiB0IH0pLnByb21pc2UoKSkpXG59XG5cbmV4cG9ydCBjb25zdCBzZXR1cFRhYmxlcyA9ICguLi50YWJsZXM6IER5bmFtb0RCLlR5cGVzLkNyZWF0ZVRhYmxlSW5wdXRbXSkgPT4ge1xuICBkYkNvbm5lY3Rpb25TZXR1cCgpXG4gIGJlZm9yZUVhY2goYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IFByb21pc2UuYWxsKHRhYmxlcy5tYXAoY3JlYXRlVGFibGUpKVxuICB9KVxuXG4gIGFmdGVyRWFjaChhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgZGVsZXRlQWxsVGFibGVzKClcbiAgfSlcbn1cbiJdfQ==