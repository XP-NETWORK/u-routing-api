import { CacheMode } from '@uniswap/smart-order-router';
import { ChainId, CurrencyAmount, Token, TradeType } from '@uniswap/sdk-core';
import { CachedRoutesBucket, CachedRoutesStrategy, } from '../../../../../../../lib/handlers/router-entities/route-caching';
import { describe, it, expect } from '@jest/globals';
describe('CachedRoutesStrategy', () => {
    const WETH = new Token(ChainId.MAINNET, '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', 18, 'WETH');
    let strategy;
    beforeEach(() => {
        strategy = new CachedRoutesStrategy({
            pair: 'WETH/USD',
            tradeType: TradeType.EXACT_INPUT,
            chainId: ChainId.MAINNET,
            buckets: [
                new CachedRoutesBucket({ bucket: 1, blocksToLive: 2, cacheMode: CacheMode.Tapcompare }),
                new CachedRoutesBucket({ bucket: 5, blocksToLive: 2, cacheMode: CacheMode.Tapcompare }),
                new CachedRoutesBucket({ bucket: 10, blocksToLive: 1, cacheMode: CacheMode.Tapcompare }),
                new CachedRoutesBucket({ bucket: 50, blocksToLive: 1, cacheMode: CacheMode.Tapcompare }),
                new CachedRoutesBucket({ bucket: 100, blocksToLive: 1, cacheMode: CacheMode.Tapcompare }),
                new CachedRoutesBucket({ bucket: 500, blocksToLive: 1, cacheMode: CacheMode.Tapcompare }),
            ],
        });
    });
    describe('#getCachingBucket', () => {
        it('find the first bucket that fits the amount', () => {
            const currencyAmount = CurrencyAmount.fromRawAmount(WETH, 1 * 10 ** WETH.decimals);
            const cachingParameters = strategy.getCachingBucket(currencyAmount);
            expect(cachingParameters).toBeDefined();
            expect(cachingParameters === null || cachingParameters === void 0 ? void 0 : cachingParameters.bucket).toBe(1);
        });
        it('find the bucket, searching in the middle amounts', () => {
            const currencyAmount = CurrencyAmount.fromRawAmount(WETH, 42 * 10 ** WETH.decimals);
            const cachingParameters = strategy.getCachingBucket(currencyAmount);
            expect(cachingParameters).toBeDefined();
            expect(cachingParameters === null || cachingParameters === void 0 ? void 0 : cachingParameters.bucket).toBe(50);
        });
        it('looks for bucket in higher amounts', () => {
            const currencyAmount = CurrencyAmount.fromRawAmount(WETH, 500 * 10 ** WETH.decimals);
            const cachingParameters = strategy.getCachingBucket(currencyAmount);
            expect(cachingParameters).toBeDefined();
            expect(cachingParameters === null || cachingParameters === void 0 ? void 0 : cachingParameters.bucket).toBe(500);
        });
        it('returns undefined once we are out of range', () => {
            const currencyAmount = CurrencyAmount.fromRawAmount(WETH, 501 * 10 ** WETH.decimals);
            const cachingParameters = strategy.getCachingBucket(currencyAmount);
            expect(cachingParameters).toBeUndefined();
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlcy1zdHJhdGVneS50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vdGVzdC9qZXN0L3VuaXQvaGFuZGxlcnMvcm91dGVyLWVudGl0aWVzL3JvdXRlLWNhY2hpbmcvbW9kZWwvY2FjaGVkLXJvdXRlcy1zdHJhdGVneS50ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQTtBQUN2RCxPQUFPLEVBQUUsT0FBTyxFQUFFLGNBQWMsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUE7QUFDN0UsT0FBTyxFQUNMLGtCQUFrQixFQUNsQixvQkFBb0IsR0FDckIsTUFBTSxpRUFBaUUsQ0FBQTtBQUN4RSxPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUE7QUFFcEQsUUFBUSxDQUFDLHNCQUFzQixFQUFFLEdBQUcsRUFBRTtJQUNwQyxNQUFNLElBQUksR0FBRyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLDRDQUE0QyxFQUFFLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQTtJQUNqRyxJQUFJLFFBQThCLENBQUE7SUFFbEMsVUFBVSxDQUFDLEdBQUcsRUFBRTtRQUNkLFFBQVEsR0FBRyxJQUFJLG9CQUFvQixDQUFDO1lBQ2xDLElBQUksRUFBRSxVQUFVO1lBQ2hCLFNBQVMsRUFBRSxTQUFTLENBQUMsV0FBVztZQUNoQyxPQUFPLEVBQUUsT0FBTyxDQUFDLE9BQU87WUFDeEIsT0FBTyxFQUFFO2dCQUNQLElBQUksa0JBQWtCLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLFlBQVksRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLFNBQVMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztnQkFDdkYsSUFBSSxrQkFBa0IsQ0FBQyxFQUFFLE1B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Q0FBQyxnQkFBZ0IsQ0FBQyxjQUFjLENBQUMsQ0FBQTtZQUVuRSxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxhQUFhLEVBQUUsQ0FBQTtRQUMzQyxDQUFDLENBQUMsQ0FBQTtJQUNKLENBQUMsQ0FBQyxDQUFBO0FBQ0osQ0FBQyxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYWNoZU1vZGUgfSBmcm9tICdAdW5pc3dhcC9zbWFydC1vcmRlci1yb3V0ZXInXG5pbXBvcnQgeyBDaGFpbklkLCBDdXJyZW5jeUFtb3VudCwgVG9rZW4sIFRyYWRlVHlwZSB9IGZyb20gJ0B1bmlzd2FwL3Nkay1jb3JlJ1xuaW1wb3J0IHtcbiAgQ2FjaGVkUm91dGVzQnVja2V0LFxuICBDYWNoZWRSb3V0ZXNTdHJhdGVneSxcbn0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGliL2hhbmRsZXJzL3JvdXRlci1lbnRpdGllcy9yb3V0ZS1jYWNoaW5nJ1xuaW1wb3J0IHsgZGVzY3JpYmUsIGl0LCBleHBlY3QgfSBmcm9tICdAamVzdC9nbG9iYWxzJ1xuXG5kZXNjcmliZSgnQ2FjaGVkUm91dGVzU3RyYXRlZ3knLCAoKSA9PiB7XG4gIGNvbnN0IFdFVEggPSBuZXcgVG9rZW4oQ2hhaW5JZC5NQUlOTkVULCAnMHhjMDJhYWEzOWIyMjNmZThkMGEwZTVjNGYyN2VhZDkwODNjNzU2Y2MyJywgMTgsICdXRVRIJylcbiAgbGV0IHN0cmF0ZWd5OiBDYWNoZWRSb3V0ZXNTdHJhdGVneVxuXG4gIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgIHN0cmF0ZWd5ID0gbmV3IENhY2hlZFJvdXRlc1N0cmF0ZWd5KHtcbiAgICAgIHBhaXI6ICdXRVRIL1VTRCcsXG4gICAgICB0cmFkZVR5cGU6IFRyYWRlVHlwZS5FWEFDVF9JTlBVVCxcbiAgICAgIGNoYWluSWQ6IENoYWluSWQuTUFJTk5FVCxcbiAgICAgIGJ1Y2tldHM6IFtcbiAgICAgICAgbmV3IENhY2hlZFJvdXRlc0J1Y2tldCh7IGJ1Y2tldDogMSwgYmxvY2tzVG9MaXZlOiAyLCBjYWNoZU1vZGU6IENhY2hlTW9kZS5UYXBjb21wYXJlIH0pLFxuICAgICAgICBuZXcgQ2FjaGVkUm91dGVzQnVja2V0KHsgYnVja2V0OiA1LCBibG9ja3NUb0xpdmU6IDIsIGNhY2hlTW9kZTogQ2FjaGVNb2RlLlRhcGNvbXBhcmUgfSksXG4gICAgICAgIG5ldyBDYWNoZWRSb3V0ZXNCdWNrZXQoeyBidWNrZXQ6IDEwLCBibG9ja3NUb0xpdmU6IDEsIGNhY2hlTW9kZTogQ2FjaGVNb2RlLlRhcGNvbXBhcmUgfSksXG4gICAgICAgIG5ldyBDYWNoZWRSb3V0ZXNCdWNrZXQoeyBidWNrZXQ6IDUwLCBibG9ja3NUb0xpdmU6IDEsIGNhY2hlTW9kZTogQ2FjaGVNb2RlLlRhcGNvbXBhcmUgfSksXG4gICAgICAgIG5ldyBDYWNoZWRSb3V0ZXNCdWNrZXQoeyBidWNrZXQ6IDEwMCwgYmxvY2tzVG9MaXZlOiAxLCBjYWNoZU1vZGU6IENhY2hlTW9kZS5UYXBjb21wYXJlIH0pLFxuICAgICAgICBuZXcgQ2FjaGVkUm91dGVzQnVja2V0KHsgYnVja2V0OiA1MDAsIGJsb2Nrc1RvTGl2ZTogMSwgY2FjaGVNb2RlOiBDYWNoZU1vZGUuVGFwY29tcGFyZSB9KSxcbiAgICAgIF0sXG4gICAgfSlcbiAgfSlcblxuICBkZXNjcmliZSgnI2dldENhY2hpbmdCdWNrZXQnLCAoKSA9PiB7XG4gICAgaXQoJ2ZpbmQgdGhlIGZpcnN0IGJ1Y2tldCB0aGF0IGZpdHMgdGhlIGFtb3VudCcsICgpID0+IHtcbiAgICAgIGNvbnN0IGN1cnJlbmN5QW1vdW50ID0gQ3VycmVuY3lBbW91bnQuZnJvbVJhd0Ftb3VudChXRVRILCAxICogMTAgKiogV0VUSC5kZWNpbWFscylcbiAgICAgIGNvbnN0IGNhY2hpbmdQYXJhbWV0ZXJzID0gc3RyYXRlZ3kuZ2V0Q2FjaGluZ0J1Y2tldChjdXJyZW5jeUFtb3VudClcblxuICAgICAgZXhwZWN0KGNhY2hpbmdQYXJhbWV0ZXJzKS50b0JlRGVmaW5lZCgpXG4gICAgICBleHBlY3QoY2FjaGluZ1BhcmFtZXRlcnM/LmJ1Y2tldCkudG9CZSgxKVxuICAgIH0pXG5cbiAgICBpdCgnZmluZCB0aGUgYnVja2V0LCBzZWFyY2hpbmcgaW4gdGhlIG1pZGRsZSBhbW91bnRzJywgKCkgPT4ge1xuICAgICAgY29uc3QgY3VycmVuY3lBbW91bnQgPSBDdXJyZW5jeUFtb3VudC5mcm9tUmF3QW1vdW50KFdFVEgsIDQyICogMTAgKiogV0VUSC5kZWNpbWFscylcbiAgICAgIGNvbnN0IGNhY2hpbmdQYXJhbWV0ZXJzID0gc3RyYXRlZ3kuZ2V0Q2FjaGluZ0J1Y2tldChjdXJyZW5jeUFtb3VudClcblxuICAgICAgZXhwZWN0KGNhY2hpbmdQYXJhbWV0ZXJzKS50b0JlRGVmaW5lZCgpXG4gICAgICBleHBlY3QoY2FjaGluZ1BhcmFtZXRlcnM/LmJ1Y2tldCkudG9CZSg1MClcbiAgICB9KVxuXG4gICAgaXQoJ2xvb2tzIGZvciBidWNrZXQgaW4gaGlnaGVyIGFtb3VudHMnLCAoKSA9PiB7XG4gICAgICBjb25zdCBjdXJyZW5jeUFtb3VudCA9IEN1cnJlbmN5QW1vdW50LmZyb21SYXdBbW91bnQoV0VUSCwgNTAwICogMTAgKiogV0VUSC5kZWNpbWFscylcbiAgICAgIGNvbnN0IGNhY2hpbmdQYXJhbWV0ZXJzID0gc3RyYXRlZ3kuZ2V0Q2FjaGluZ0J1Y2tldChjdXJyZW5jeUFtb3VudClcblxuICAgICAgZXhwZWN0KGNhY2hpbmdQYXJhbWV0ZXJzKS50b0JlRGVmaW5lZCgpXG4gICAgICBleHBlY3QoY2FjaGluZ1BhcmFtZXRlcnM/LmJ1Y2tldCkudG9CZSg1MDApXG4gICAgfSlcblxuICAgIGl0KCdyZXR1cm5zIHVuZGVmaW5lZCBvbmNlIHdlIGFyZSBvdXQgb2YgcmFuZ2UnLCAoKSA9PiB7XG4gICAgICBjb25zdCBjdXJyZW5jeUFtb3VudCA9IEN1cnJlbmN5QW1vdW50LmZyb21SYXdBbW91bnQoV0VUSCwgNTAxICogMTAgKiogV0VUSC5kZWNpbWFscylcbiAgICAgIGNvbnN0IGNhY2hpbmdQYXJhbWV0ZXJzID0gc3RyYXRlZ3kuZ2V0Q2FjaGluZ0J1Y2tldChjdXJyZW5jeUFtb3VudClcblxuICAgICAgZXhwZWN0KGNhY2hpbmdQYXJhbWV0ZXJzKS50b0JlVW5kZWZpbmVkKClcbiAgICB9KVxuICB9KVxufSlcbiJdfQ==