import { PairTradeTypeChainId } from '../../../../../../../lib/handlers/router-entities/route-caching';
import { ChainId, TradeType } from '@uniswap/sdk-core';
import { describe, it, expect } from '@jest/globals';
describe('PairTradeTypeChainId', () => {
    const WETH = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';
    const USDC = '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48';
    describe('toString', () => {
        it('returns a stringified version of the object', () => {
            const pairTradeTypeChainId = new PairTradeTypeChainId({
                tokenIn: WETH,
                tokenOut: USDC,
                tradeType: TradeType.EXACT_INPUT,
                chainId: ChainId.MAINNET,
            });
            expect(pairTradeTypeChainId.toString()).toBe(`${WETH.toLowerCase()}/${USDC.toLowerCase()}/${TradeType.EXACT_INPUT}/${ChainId.MAINNET}`);
        });
        it('token addresses are converted to lowercase', () => {
            const pairTradeTypeChainId = new PairTradeTypeChainId({
                tokenIn: WETH.toUpperCase(),
                tokenOut: USDC.toUpperCase(),
                tradeType: TradeType.EXACT_INPUT,
                chainId: ChainId.MAINNET,
            });
            expect(pairTradeTypeChainId.toString()).toBe(`${WETH.toLowerCase()}/${USDC.toLowerCase()}/${TradeType.EXACT_INPUT}/${ChainId.MAINNET}`);
        });
        it('works with ExactOutput too', () => {
            const pairTradeTypeChainId = new PairTradeTypeChainId({
                tokenIn: WETH.toUpperCase(),
                tokenOut: USDC.toUpperCase(),
                tradeType: TradeType.EXACT_OUTPUT,
                chainId: ChainId.MAINNET,
            });
            expect(pairTradeTypeChainId.toString()).toBe(`${WETH.toLowerCase()}/${USDC.toLowerCase()}/${TradeType.EXACT_OUTPUT}/${ChainId.MAINNET}`);
        });
        it('works with other chains', () => {
            const pairTradeTypeChainId = new PairTradeTypeChainId({
                tokenIn: WETH.toUpperCase(),
                tokenOut: USDC.toUpperCase(),
                tradeType: TradeType.EXACT_OUTPUT,
                chainId: ChainId.ARBITRUM_ONE,
            });
            expect(pairTradeTypeChainId.toString()).toBe(`${WETH.toLowerCase()}/${USDC.toLowerCase()}/${TradeType.EXACT_OUTPUT}/${ChainId.ARBITRUM_ONE}`);
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFpci10cmFkZS10eXBlLWNoYWluLWlkLnRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi90ZXN0L2plc3QvdW5pdC9oYW5kbGVycy9yb3V0ZXItZW50aXRpZXMvcm91dGUtY2FjaGluZy9tb2RlbC9wYWlyLXRyYWRlLXR5cGUtY2hhaW4taWQudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpRUFBaUUsQ0FBQTtBQUN0RyxPQUFPLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBQ3RELE9BQU8sRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQTtBQUVwRCxRQUFRLENBQUMsc0JBQXNCLEVBQUUsR0FBRyxFQUFFO0lBQ3BDLE1BQU0sSUFBSSxHQUFHLDRDQUE0QyxDQUFBO0lBQ3pELE1BQU0sSUFBSSxHQUFHLDRDQUE0QyxDQUFBO0lBRXpELFFBQVEsQ0FBQyxVQUFVLEVBQUUsR0FBRyxFQUFFO1FBQ3hCLEVBQUUsQ0FBQyw2Q0FBNkMsRUFBRSxHQUFHLEVBQUU7WUFDckQsTUFBTSxvQkFBb0IsR0FBRyxJQUFJLG9CQUFvQixDQUFDO2dCQUNwRCxPQUFPLEVBQUUsSUFBSTtnQkFDYixRQUFRLEVBQUUsSUFBSTtnQkFDZCxTQUFTLEVBQUUsU0FBUyxDQUFDLFdBQVc7Z0JBQ2hDLE9BQU8sRUFBRSxPQUFPLENBQUMsT0FBTzthQUN6QixDQUFDLENBQUE7WUFFRixNQUFNLENBQUMsb0JBQW9CLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQzFDLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxTQUFTLENBQUMsV0FBVyxJQUFJLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FDMUYsQ0FBQTtRQUNILENBQUMsQ0FBQyxDQUFBO1FBRUYsRUFBRSxDQUFDLDRDQUE0QyxFQUFFLEdBQUcsRUFBRTtZQUNwRCxNQUFNLG9CQUFvQixHQUFHLElBQUksb0JBQW9CLENBQUM7Z0JBQ3BELE9BQU8sRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFO2dCQUMzQixRQUFRLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRTtnQkFDNUIsU0FBUyxFQUFFLFNBQVMsQ0FBQyxXQUFXO2dCQUNoQyxPQUFPLEVBQUUsT0FBTyxDQUFDLE9BQU87YUFDekIsQ0FBQyxDQUFBO1lBRUYsTUFBTSxDQUFDLG9CQUFvQixDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUMxQyxHQUFHLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksU0FBUyxDQUFDLFdBQVcsSUFBSSxPQUFPLENBQUMsT0FBTyxFQUFFLENBQzFGLENBQUE7UUFDSCxDQUFDLENBQUMsQ0FBQTtRQUVGLEVBQUUsQ0FBQyw0QkFBNEIsRUFBRSxHQUFHLEVBQUU7WUFDcEMsTUFBTSxvQkFBb0IsR0FBRyxJQUFJLG9CQUFvQixDQUFDO2dCQUNwRCxPQUFPLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRTtnQkFDM0IsUUFBUSxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUU7Z0JBQzVCLFNBQVMsRUFBRSxTQUFTLENBQUMsWUFBWTtnQkFDakMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPO2FBQ3pCLENBQUMsQ0FBQTtZQUVGLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FDMUMsR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLFNBQVMsQ0FBQyxZQUFZLElBQUksT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUMzRixDQUFBO1FBQ0gsQ0FBQyxDQUFDLENBQUE7UUFFRixFQUFFLENBQUMseUJBQXlCLEVBQUUsR0FBRyxFQUFFO1lBQ2pDLE1BQU0sb0JBQW9CLEdBQUcsSUFBSSxvQkFBb0IsQ0FBQztnQkFDcEQsT0FBTyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUU7Z0JBQzNCLFFBQVEsRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFO2dCQUM1QixTQUFTLEVBQUUsU0FBUyxDQUFDLFlBQVk7Z0JBQ2pDLE9BQU8sRUFBRSxPQUFPLENBQUMsWUFBWTthQUM5QixDQUFDLENBQUE7WUFFRixNQUFNLENBQUMsb0JBQW9CLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQzFDLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxTQUFTLENBQUMsWUFBWSxJQUFJLE9BQU8sQ0FBQyxZQUFZLEVBQUUsQ0FDaEcsQ0FBQTtRQUNILENBQUMsQ0FBQyxDQUFBO0lBQ0osQ0FBQyxDQUFDLENBQUE7QUFDSixDQUFDLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhaXJUcmFkZVR5cGVDaGFpbklkIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGliL2hhbmRsZXJzL3JvdXRlci1lbnRpdGllcy9yb3V0ZS1jYWNoaW5nJ1xuaW1wb3J0IHsgQ2hhaW5JZCwgVHJhZGVUeXBlIH0gZnJvbSAnQHVuaXN3YXAvc2RrLWNvcmUnXG5pbXBvcnQgeyBkZXNjcmliZSwgaXQsIGV4cGVjdCB9IGZyb20gJ0BqZXN0L2dsb2JhbHMnXG5cbmRlc2NyaWJlKCdQYWlyVHJhZGVUeXBlQ2hhaW5JZCcsICgpID0+IHtcbiAgY29uc3QgV0VUSCA9ICcweGMwMmFhYTM5YjIyM2ZlOGQwYTBlNWM0ZjI3ZWFkOTA4M2M3NTZjYzInXG4gIGNvbnN0IFVTREMgPSAnMHhhMGI4Njk5MWM2MjE4YjM2YzFkMTlkNGEyZTllYjBjZTM2MDZlYjQ4J1xuXG4gIGRlc2NyaWJlKCd0b1N0cmluZycsICgpID0+IHtcbiAgICBpdCgncmV0dXJucyBhIHN0cmluZ2lmaWVkIHZlcnNpb24gb2YgdGhlIG9iamVjdCcsICgpID0+IHtcbiAgICAgIGNvbnN0IHBhaXJUcmFkZVR5cGVDaGFpbklkID0gbmV3IFBhaXJUcmFkZVR5cGVDaGFpbklkKHtcbiAgICAgICAgdG9rZW5JbjogV0VUSCxcbiAgICAgICAgdG9rZW5PdXQ6IFVTREMsXG4gICAgICAgIHRyYWRlVHlwZTogVHJhZGVUeXBlLkVYQUNUX0lOUFVULFxuICAgICAgICBjaGFpbklkOiBDaGFpbklkLk1BSU5ORVQsXG4gICAgICB9KVxuXG4gICAgICBleHBlY3QocGFpclRyYWRlVHlwZUNoYWluSWQudG9TdHJpbmcoKSkudG9CZShcbiAgICAgICAgYCR7V0VUSC50b0xvd2VyQ2FzZSgpfS8ke1VTREMudG9Mb3dlckNhc2UoKX0vJHtUcmFkZVR5cGUuRVhBQ1RfSU5QVVR9LyR7Q2hhaW5JZC5NQUlOTkVUfWBcbiAgICAgIClcbiAgICB9KVxuXG4gICAgaXQoJ3Rva2VuIGFkZHJlc3NlcyBhcmUgY29udmVydGVkIHRvIGxvd2VyY2FzZScsICgpID0+IHtcbiAgICAgIGNvbnN0IHBhaXJUcmFkZVR5cGVDaGFpbklkID0gbmV3IFBhaXJUcmFkZVR5cGVDaGFpbklkKHtcbiAgICAgICAgdG9rZW5JbjogV0VUSC50b1VwcGVyQ2FzZSgpLFxuICAgICAgICB0b2tlbk91dDogVVNEQy50b1VwcGVyQ2FzZSgpLFxuICAgICAgICB0cmFkZVR5cGU6IFRyYWRlVHlwZS5FWEFDVF9JTlBVVCxcbiAgICAgICAgY2hhaW5JZDogQ2hhaW5JZC5NQUlOTkVULFxuICAgICAgfSlcblxuICAgICAgZXhwZWN0KHBhaXJUcmFkZVR5cGVDaGFpbklkLnRvU3RyaW5nKCkpLnRvQmUoXG4gICAgICAgIGAke1dFVEgudG9Mb3dlckNhc2UoKX0vJHtVU0RDLnRvTG93ZXJDYXNlKCl9LyR7VHJhZGVUeXBlLkVYQUNUX0lOUFVUfS8ke0NoYWluSWQuTUFJTk5FVH1gXG4gICAgICApXG4gICAgfSlcblxuICAgIGl0KCd3b3JrcyB3aXRoIEV4YWN0T3V0cHV0IHRvbycsICgpID0+IHtcbiAgICAgIGNvbnN0IHBhaXJUcmFkZVR5cGVDaGFpbklkID0gbmV3IFBhaXJUcmFkZVR5cGVDaGFpbklkKHtcbiAgICAgICAgdG9rZW5JbjogV0VUSC50b1VwcGVyQ2FzZSgpLFxuICAgICAgICB0b2tlbk91dDogVVNEQy50b1VwcGVyQ2FzZSgpLFxuICAgICAgICB0cmFkZVR5cGU6IFRyYWRlVHlwZS5FWEFDVF9PVVRQVVQsXG4gICAgICAgIGNoYWluSWQ6IENoYWluSWQuTUFJTk5FVCxcbiAgICAgIH0pXG5cbiAgICAgIGV4cGVjdChwYWlyVHJhZGVUeXBlQ2hhaW5JZC50b1N0cmluZygpKS50b0JlKFxuICAgICAgICBgJHtXRVRILnRvTG93ZXJDYXNlKCl9LyR7VVNEQy50b0xvd2VyQ2FzZSgpfS8ke1RyYWRlVHlwZS5FWEFDVF9PVVRQVVR9LyR7Q2hhaW5JZC5NQUlOTkVUfWBcbiAgICAgIClcbiAgICB9KVxuXG4gICAgaXQoJ3dvcmtzIHdpdGggb3RoZXIgY2hhaW5zJywgKCkgPT4ge1xuICAgICAgY29uc3QgcGFpclRyYWRlVHlwZUNoYWluSWQgPSBuZXcgUGFpclRyYWRlVHlwZUNoYWluSWQoe1xuICAgICAgICB0b2tlbkluOiBXRVRILnRvVXBwZXJDYXNlKCksXG4gICAgICAgIHRva2VuT3V0OiBVU0RDLnRvVXBwZXJDYXNlKCksXG4gICAgICAgIHRyYWRlVHlwZTogVHJhZGVUeXBlLkVYQUNUX09VVFBVVCxcbiAgICAgICAgY2hhaW5JZDogQ2hhaW5JZC5BUkJJVFJVTV9PTkUsXG4gICAgICB9KVxuXG4gICAgICBleHBlY3QocGFpclRyYWRlVHlwZUNoYWluSWQudG9TdHJpbmcoKSkudG9CZShcbiAgICAgICAgYCR7V0VUSC50b0xvd2VyQ2FzZSgpfS8ke1VTREMudG9Mb3dlckNhc2UoKX0vJHtUcmFkZVR5cGUuRVhBQ1RfT1VUUFVUfS8ke0NoYWluSWQuQVJCSVRSVU1fT05FfWBcbiAgICAgIClcbiAgICB9KVxuICB9KVxufSlcbiJdfQ==